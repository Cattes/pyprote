
name: CICD Pipeline üçû

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  job:
    defaults:
      run:
        shell: bash
    name: Run CICD pipeline
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="/Users/runner/.local/bin:$PATH"
        poetry config virtualenvs.create false
        poetry install
    - name: Test with pytest
      run: |
        export PATH="/Users/runner/.local/bin:$PATH"
        poetry run pytest -v
    - name: flake8
      run: |
        export PATH="/Users/runner/.local/bin:$PATH"
        poetry run flake8 .
    - name: black
      run: |
        export PATH="/Users/runner/.local/bin:$PATH"
        poetry run black --line-length 120 --check .
    - name: isort
      run: |
        export PATH="/Users/runner/.local/bin:$PATH"
        poetry run isort --check-only .
    - name: mypy
      run: |
        export PATH="/Users/runner/.local/bin:$PATH"
        poetry run mypy --namespace-packages --install-types --non-interactive .
